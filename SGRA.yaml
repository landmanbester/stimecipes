_include:
  - (pfb)stimela_cabs.yml

opts:
  log:
    dir: logs
    nest: 2
  backend:
    select: native

sgraimage:
  info: SGRA imaging recipe

  # make them all the same size
  assign:
    cell-size: 2.5
    nx: 6720
    ny: 6720

  assign_based_on:
    obs:
      sgra:
        ms: [/home/bester/projects/GC/msdir/1590089458_sdp_l0_1024ch_SGRA.ms]
        data-column: CORRECTED_DATA
        tmf: /home/bester/projects/GC/output/sgra/run0_I_main_model.mds
      gcx17:
        ms: [/home/bester/projects/GC/msdir/1590089458_sdp_l0_1024ch_GCX17.ms]
        data-column: CORRECTED_DATA+MODEL_DATA
        tmf: /home/bester/projects/GC/output/gcx17/run0_I_main_model.mds
      gcx30:
        ms: [/home/bester/projects/GC/msdir/1590089458_sdp_l0_1024ch_GCX30.ms]
        data-column: CORRECTED_DATA+MODEL_DATA
        tmf: /home/bester/projects/GC/output/gcx30/run0_I_main_model.mds

  inputs:
    basedir:
      default: '/home/bester/projects/GC/output'
      info:
        Base directory in which to place output data products.
    obs:
      default: sgra
      choices: ['sgra','gcx17','gcx30']
    imagename:
      default: run1
      info:
        Image will be named 
    model-column:
      default: MODEL_DATA_PFB
      info:
        Column to write model visibilities to
    freq-range:
      info:
        Subset of frequencies to image specified in Hertz
    channels-per-image:
      default: 128  # results in 8 bands
      info:
        Number of channels per image.
        Determines number of output bands.
    integrations-per-image:
      default: -1
      info:
        Number of integrations per image.
    robustness:
      dtype: float
      default: -0.75
      info:
        Briggs robustness level.
        Less than -2 corresponds to uniform, larger than 2 to natural.
    field-of-view:
      dtype: float
      default: 4.5
    super-resolution-factor:
      dtype: float
      default: 2.5
      info:
        How much to oversample Nyquist by at the highest frequency
    cell-size:
      dtype: float
      info:
        Cell size in arcseconds.
        Preferred over fov and srf if set.
    nx:
      dtype: int
      info:
        Number of pixels in x direction.
    ny:
      dtype: int
      info:
        Number of pixels in y direction.
    chan-average:
      dtype: int
      default: 1
      info:
        How many channels to average together
    bda-decorr:
      dtype: float
      default: 0.98
      info:
        Amount of amplitude loss that can be tolerated at edge of field
    niter:
      dtype: int
      default: 15
      info:
        Number of major cycles
    l1-reweight-from:
      dtype: int
      default: 7
    l2-reweight-dof:
      dtype: int
    rmsfactor:
      dtype: float
      default: 0.5  # 3 -> just after cal transfer, 0.5 -> minimum before getting crap in the model
      info:
        Multiple of the rms to threshold by
    alpha:
      dtype: float
      default: 4
      info:
        How aggressively to reweight
    pd-tol:
      dtype: List[float]
      default: [2e-4]
      info:
        List of floats used for primal dual tolerance.
    overwrite:
      default: true
      aliases: ['*.overwrite']
    tmf:
      dtype: str
      info:
        Transfer model from this component model
    bases:
      dtype: str
      default: 'self,db1,db2,db3,db4,db5'
      info:
        Bases to use for Psi dictionary
    diverge-count:
      dtype: int
      default: 5
      info:
        Number of iterations the residual can increase for before terminating
    output-filename:
      default: '{recipe.basedir}/{recipe.obs}/{recipe.imagename}'
      aliases: ['*.output-filename']
    fits-output-folder:
      default: '{recipe.basedir}/{recipe.obs}/fits'
      aliases: ['*.fits-output-folder']
    log-directory:
      default: '{recipe.basedir}/{recipe.obs}/logs'
      aliases: ['*.log-directory']

  steps:
    init:
      cab: pfb.init
      info: 'Initialise imaging data products'
      params:
        ms: =recipe.ms
        nthreads: 1
        nworkers: 32
        data-column: =recipe.data-column
        sigma-column: SIGMA_SPECTRUM
        channels-per-image: =recipe.channels-per-image
        integrations-per-image: =recipe.integrations-per-image
        chan-average: =recipe.chan-average
        max-field-of-view: =recipe.field-of-view
        bda-decorr: =recipe.bda-decorr
        freq-range: =IFSET(recipe.freq-range)
        overwrite: =recipe.overwrite

    grid:
      cab: pfb.grid
      info: 'Setup grid for imaging'
      params:
        super-resolution-factor: =IFSET(recipe.super-resolution-factor)
        field-of-view: =IFSET(recipe.field-of-view)
        cell-size: =IFSET(recipe.cell-size)
        nx: =IFSET(recipe.nx)
        ny: =IFSET(recipe.ny)
        robustness: =recipe.robustness
        nthreads: 6
        nworkers: 6
        psf-oversize: 1.6
        transfer-model-from: =IFSET(recipe.tmf)
        overwrite: =recipe.overwrite
        l2-reweight-dof: =IFSET(recipe.l2-reweight-dof)

    sara:
      cab: pfb.sara
      info: Cleaning step
      params:
        niter: =recipe.niter
        bases: =recipe.bases
        nlevels: 3
        l1-reweight-from: =recipe.l1-reweight-from
        pd-tol: =recipe.pd-tol
        pd-maxit: 450
        pd-verbose: 2
        pd-report-freq: 50
        tol: 1e-3
        gamma: 0.99
        rmsfactor: =recipe.rmsfactor
        eta: 5e-4
        alpha: =recipe.alpha
        positivity: 1
        nthreads: 48  # nthreads_per_basis = floor(nthreads//nband)
        diverge-count: =recipe.diverge-count

    restore:
      cab: pfb.restore
      info: Produce restored image.
      params:
        nworkers: 4
        nthreads: 6
        outputs: iI

    degrid:
      cab: pfb.degrid
      info: Render model to visibilities
      params:
        ms: =recipe.ms
        model-column: =recipe.model-column
        nworkers: 2
        nthreads: 16
        freq-range: =IFSET(recipe.freq-range)

