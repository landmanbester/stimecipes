_include:
  - lb-cabs.yaml
  - (quartical)stimela_cabs.yaml
  - casacabs.yaml

opts:
  log:
    dir: logs
    nest: 2

goqcal:
  name: goqcal
  info: QC + wsclean recipe

  inputs:
    ms_primary:
      dtype: MS
      required: true
      abbreviation: msp
    ms_secondary:
      dtype: MS
      required: true
      abbreviation: mss
    ms_target:
      dtype: MS
      required: true
      abbreviation: mst
    basedir:
      default: 'out'
    model_column:
      dtype: str
      default: MODEL_DATA
    cball_model:
      dtype: str
      default: fitted.PKS1934.LBand.wsclean.cat.txt


  steps:
    bkpprimflag:
      cab: qcalbackup
      params:
        ms_path: '{recipe.ms_primary}'
        zarr_dir: '{recipe.basedir}/initial_flags'
        column: FLAG

    bkpprimflagrow:
      cab: qcalbackup
      params:
        ms_path: '{recipe.ms_primary}'
        zarr_dir: '{recipe.basedir}/initial_flags'
        column: FLAG_ROW

    bkpsecflag:
      cab: qcalbackup
      params:
        ms_path: '{recipe.ms_secondary}'
        zarr_dir: '{recipe.basedir}/initial_flags'
        column: FLAG

    bkpsecflagrow:
      cab: qcalbackup
      params:
        ms_path: '{recipe.ms_secondary}'
        zarr_dir: '{recipe.basedir}/initial_flags'
        column: FLAG_ROW

    bkptargetflag:
      cab: qcalbackup
      params:
        ms_path: '{recipe.ms_target}'
        zarr_dir: '{recipe.basedir}/initial_flags'
        column: FLAG

    bkptargetflagrow:
      cab: qcalbackup
      params:
        ms_path: '{recipe.ms_target}'
        zarr_dir: '{recipe.basedir}/initial_flags'
        column: FLAG_ROW

    flagprim0:
      cab: casa.flagdata
      params:
        vis: '{recipe.ms_primary}'
        spw: "0:1.087~1.0915ghz"

    init_primary_model:
      cab: crystalball
      info: 'Populate MODEL_DATA column'
      params:
        ms: '{recipe.ms_primary}'
        sky_model: '{recipe.cball_model}'
        num_sources: 1000
        output_column: '{recipe.model_column}'
        num_workers: 8
        memory_fraction: 0.5

    primkgb:
      cab: quartical
      info: GKB on the primary where
            G = time variable complex gain,
            K = per scan delay
            B = frequency variable complex gain (bandpass)
      params:
        input_ms.path: '{recipe.ms_primary}'
        input_ms.time_chunk: '0'
        input_ms.freq_chunk: '0'
        input_ms.select_uv_range: [0,0]
        input_ms.group_by: [FIELD_ID,DATA_DESC_ID,SCAN_NUMBER]
        input_ms.select_corr: [0, 3]
        input_model.recipe: '{recipe.model_column}'
        input_model.apply_p_jones: false
        solver.terms: [G,K,B]
        solver.iter_recipe: [50,50,50]
        solver.propagate_flags: true
        solver.robust: false
        solver.reweighting_flag_threshold: 0
        solver.threads: 8
        solver.reference_antenna: 57
        output.gain_directory: '{recipe.basedir}/gkb.qc'
        output.log_directory: '{recipe.basedir}/'
        output.overwrite: true
        output.products: [corrected_data]
        output.columns: [CORRECTED_DATA]
        output.flags: true
        output.apply_p_jones_inv: false
        output.net_gains: []
        mad_flags.enable: false
        dask.threads: 2
        dask.scheduler: threads
        G.type: complex
        G.time_interval: 0
        G.freq_interval: 0
        K.type: delay
        K.time_interval: 0
        K.freq_interval: 0
        K.initial_estimate: true
        B.type: complex
        B.time_interval: 0
        B.freq_interval: 1

    plotprimpball:
      cab: casa.plotms
      params:
        vis: '{recipe.ms_primary}'
        xaxis: real
        yaxis: imag
        correlation: XX,YY
        ydatacolumn: corrected
        coloraxis: corr
        avgbaseline: false
        uvrange: '>1m'
        plotfile: primary.phase.ball.png
        showgui: false
        overwrite: true


    flagsec0:
      cab: casa.flagdata
      params:
        vis: '{recipe.ms_secondary}'
        spw: "0:1.087~1.0915ghz"

    secdp:
      cab: quartical
      info: DP on the secondary where
            P = time variable phase only gain,
            D = per scan delay refinement
      params:
        input_ms.path: '{recipe.ms_secondary}'
        input_ms.time_chunk: '0'
        input_ms.freq_chunk: '0'
        input_ms.select_uv_range: [0,0]
        input_ms.group_by: [FIELD_ID,DATA_DESC_ID,SCAN_NUMBER]
        input_ms.select_corr: [0, 3]
        input_model.recipe:
        input_model.apply_p_jones: false
        solver.terms: [G,K,B,P,D]
        solver.iter_recipe: [0,0,0,50,50]
        solver.propagate_flags: true
        solver.robust: false
        solver.reweighting_flag_threshold: 0
        solver.threads: 8
        solver.reference_antenna: 57
        output.gain_directory: '{recipe.basedir}/dp.qc'
        output.log_directory: '{recipe.basedir}/'
        output.overwrite: true
        output.products: [corrected_data]
        output.columns: [CORRECTED_DATA]
        output.flags: true
        output.apply_p_jones_inv: false
        output.net_gains: [G,K,B,P,D]
        mad_flags.enable: false
        dask.threads: 2
        dask.scheduler: threads
        G.type: complex
        G.time_interval: 0
        G.freq_interval: 0
        G.load_from: '{recipe.basedir}/gkb.qc/gains.qc/G'
        G.interp_method: 2dlinear
        G.interp_mode: ampphase
        K.type: delay
        K.time_interval: 0
        K.freq_interval: 0
        K.initial_estimate: false
        K.load_from: '{recipe.basedir}/gkb.qc/gains.qc/K'
        K.interp_method: 2dlinear
        K.interp_mode: ampphase
        B.type: complex
        B.time_interval: 0
        B.freq_interval: 1
        B.load_from: '{recipe.basedir}/gkb.qc/gains.qc/B'
        B.interp_method: 2dlinear
        B.interp_mode: ampphase
        P.type: phase
        P.time_interval: 0
        P.freq_interval: 0
        D.type: delay
        D.time_interval: 0
        D.freq_interval: 0
        D.initial_estimate: false

    transfertarget:
      cab: quartical
      info: Transfer gains to target field
      params:
        input_ms.path: '{recipe.ms_target}'
        input_ms.time_chunk: '0'
        input_ms.freq_chunk: '0'
        input_ms.select_uv_range: [0,0]
        input_ms.group_by: [FIELD_ID,DATA_DESC_ID,SCAN_NUMBER]
        input_ms.select_corr: [0, 3]
        input_model.recipe: '{recipe.model_column}'
        input_model.apply_p_jones: false
        solver.terms: [N]
        solver.iter_recipe: [0]
        solver.propagate_flags: true
        solver.robust: false
        solver.reweighting_flag_threshold: 0
        solver.threads: 8
        solver.reference_antenna: 57
        output.gain_directory: '{recipe.basedir}/target.qc'
        output.log_directory: '{recipe.basedir}/'
        output.overwrite: true
        output.products: [corrected_data, corrected_weight]
        output.columns: [CORRECTED_DATA, WEIGHT_SPECTRUM]
        output.flags: true
        output.apply_p_jones_inv: false
        output.net_gains:
        mad_flags.enable: false
        dask.threads: 2
        dask.scheduler: threads
        N.type: complex
        N.time_interval: 1
        N.freq_interval: 1
        N.load_from: '{recipe.basedir}/dp.qc/gains.qc/G'
        N.interp_method: 2dlinear
        N.interp_mode: ampphase

    flagtarget0:
      cab: casa.flagdata
      params:
        vis: '{recipe.ms_target}'
        spw: "0:1.087~1.0915ghz"


    clean0:
      cab: wsclean1
      params:
        ms: '{recipe.ms_target}'
        name: RXCJ1638.2-6420.1GC
        column: CORRECTED_DATA
        nband: 2
        size: 4096
        scale: 2.2asec
        join-channels: true
        use-wgridder: true
        weight: briggs 0.0
        niter: 5000
        nmiter: 5
        sigma: 7

    mask0:
      cab: breizorro
      params:
        restored_image: RXCJ1638.2-6420.1GC.image.fits
        outfile: RXCJ1638.2-6420.1GC.FITSMASK.fits

    clean1:
      cab: wsclean
      params:
        ms: '{recipe.ms_target}'
        name: RXCJ1638.2-6420.1GC
        column: CORRECTED_DATA
        nband: 2
        size: 4096
        scale: 2.2asec
        join-channels: true
        use-gridder: true
        weight: briggs 0.0
        niter: 5000
        nmiter: 10
        sigma: 3
        fits-mask: RXCJ1638.2-6420.1GC.FITSMASK.fits

    selfcaltarget0:
      cab: casa.gaincal
      params:
        vis: '{recipe.ms_target}'
        field: RXCJ1638.2-6420
        caltable: target.G0
        gaintype: G
        calmode: p
        refant: m000
        interp: [linear, linear, nearest]
        gaintable: [prim.B0, prim.F0, sec.K0]
        gainfield: [J1939-6342, J1939-6342, J1859-6615]
        solint: 48s


    clean2:
      cab: wsclean
      params:
        ms: '{recipe.ms_target}'
        name: RXCJ1638.2-6420.1GC
        column: CORRECTED_DATA
        nband: 2
        size: 4096
        scale: 2.2asec
        join-channels: true
        use-gridder: true
        weight: briggs 0.0
        niter: 5000
        nmiter: 5
        sigma: 5
        fits-mask: RXCJ1638.2-6420.1GC.FITSMASK.fits

