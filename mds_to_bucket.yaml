opts:
  backend:
    select: kube
    kube:
      enable: true
      dir: /mnt/data/admin-test
      namespace: admin
      volumes:
        admin-efs-pvc:
          mount: /mnt/data

      debug:
        pause_on_start: false

      user:
        uid: 1000
        gid: 1000

      predefined_pod_specs:
        scheduler:
          nodeSelector:
            rarg/node-class: compute
            rarg/instance-type: m6i.large
            rarg/capacity-type: ON_DEMAND
        tiny:
          nodeSelector:
            rarg/node-class: compute
            rarg/instance-type: m5.large
            rarg/capacity-type: ON_DEMAND
        thin:
          nodeSelector:
            rarg/node-class: compute
            rarg/instance-type: m5.2xlarge
            rarg/capacity-type: ON_DEMAND
      
      job_pod:
        type: tiny
        memory:
          limit: 0
        cpu:
          request:
            0
      dask_cluster:
        num_workers: 0
        scheduler_pod:
          type: scheduler
          memory:
            limit: "3Gi"
          cpu:
            request:
              1
        worker_pod:
          memory:
            limit: 0
          cpu:
            request:
              0

transfer:

  inputs:
    mdsi:
      dtype: URI
      required: true
    mdso:
      dtype: URI
      required: true

  steps:
    mds2s3:
     cab: mds_to_bucket
     backend:
      select: native
      native:
        virtual_env: ~/.venv/pfb
     params:
      mdsi: =recipe.mdsi
      mdso: =recipe.mdso


cabs:
  mds_to_bucket:
    flavour: python-code
    # image:  # python-astro doesn't have zarr support.
    #   name: quartical
    #   version: 0.2.5-cc0.1.3
    command: |
      print(mdsi)
      print(mdso)
      import xarray as xr

      mds = xr.open_zarr(mdsi)
      mds.to_zarr(mdso, compute=True)

      mds = xr.open_zarr(mdso)
      print(mds)

      print('Done')

    inputs:
      mdsi:
        dtype: URI
        required: true
      mdso:
        dtype: URI
        required: true